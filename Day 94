public static int[] smallestRange(List<List<Integer>> nums) {
    PriorityQueue<int[]> minHeap = new PriorityQueue<>(Comparator.comparingInt(a -> nums.get(a[0]).get(a[1])));
    int max = Integer.MIN_VALUE, rangeStart = 0, rangeEnd = Integer.MAX_VALUE;

    for (int i = 0; i < nums.size(); i++) {
        minHeap.add(new int[] {i, 0});
        max = Math.max(max, nums.get(i).get(0));
    }

    while (minHeap.size() == nums.size()) {
        int[] curr = minHeap.poll();
        int min = nums.get(curr[0]).get(curr[1]);

        if (max - min < rangeEnd - rangeStart) {
            rangeStart = min;
            rangeEnd = max;
        }

        if (curr[1] + 1 < nums.get(curr[0]).size()) {
            minHeap.add(new int[] {curr[0], curr[1] + 1});
            max = Math.max(max, nums.get(curr[0]).get(curr[1] + 1));
        }
    }

    return new int[] {rangeStart, rangeEnd};
}
